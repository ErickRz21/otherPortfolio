<nav
  class="fixed bottom-2 lg:top-2 lg:sticky mx-8 lg:mx-auto lg:w-[500px] left-0 right-0 z-40 bg-gunmetal py-3 lg:py-4.5 rounded-full shadow-lg border border-gray-700"
  role="navigation"
  aria-label="Main navigation"
>
  <ul class="relative flex items-center justify-center font-semibold text-lg">
    <!-- Logo (Not part of sliding navigation) -->
    <li class="hidden lg:block px-6">
      <h2
        class="text-3xl no-underline my-0 pb-1 flex bg-gradient-to-l from-sage to-white text-transparent bg-clip-text font-bold"
      >
        Portfolio
      </h2>
    </li>

    <!-- Nav links wrapper (used for slider positioning) -->
    <div class="relative flex items-center" id="nav-links-wrapper">
      <!-- Slider -->
      <div id="slider"></div>

      <!-- Links -->
      <li><a href="#home" class="nav-link" tabindex="0">Home</a></li>
      <li><a href="#projects" class="nav-link">Works</a></li>
      <li><a href="#footer" class="nav-link">Contact</a></li>
    </div>
  </ul>
</nav>

<script>
  document.querySelectorAll('a[href^="#"]').forEach((link) => {
    link.addEventListener("click", (event) => {
      event.preventDefault(); // Prevent default anchor behavior

      const href = link.getAttribute("href");
      const targetId = href ? href.substring(1) : ""; // Remove '#' from href
      const targetElement = document.getElementById(targetId);

      if (targetElement) {
        targetElement.scrollIntoView({ behavior: "smooth" }); // Smooth scrolling

        // Remove 'active' from all links
        document.querySelectorAll('a[href^="#"]').forEach((item) => {
          item.classList.remove("active");
        });

        // Add 'active' to the clicked link
        link.classList.add("active");
      }
    });
  });

  import { gsap } from "gsap";
  const navLinks = document.querySelectorAll<HTMLAnchorElement>(".nav-link");
  const slider = document.getElementById("slider");
  const navWrapper = document.getElementById("nav-links-wrapper");

  function animateSliderTo(link: HTMLAnchorElement) {
    if (!slider || !navWrapper) return;

    const linkRect = link.getBoundingClientRect();
    const wrapperRect = navWrapper.getBoundingClientRect();
    const relativeLeft = linkRect.left - wrapperRect.left;
    const width = link.offsetWidth;

    slider.classList.add("blurred");
    // ... then after animation
    setTimeout(() => {
      slider.classList.remove("blurred");
    }, 300); // match with animation timing

    // Animate to new position with slight scale effect
    gsap
      .timeline()
      .to(slider, {
        scaleX: 1.2,
        filter: "blur(4px)",
        duration: 0.3,
        ease: "power2.out",
      })
      .to(slider, {
        width,
        left: relativeLeft,
        duration: 0.125, // move instantly while blurred
      })
      .to(slider, {
        scaleX: 1,
        filter: "blur(0px)",
        duration: 0.3,
        ease: "power2.out",
      });
  }

  function activateLink(link: HTMLElement | null) {
    navLinks.forEach((l) => l.classList.remove("active"));
    if (link) link.classList.add("active");
  }

  // Bind click events
  navLinks.forEach((link) => {
    link.addEventListener("click", (e) => {
      const href = link.getAttribute("href");
      const targetId = href?.split("#")[1];
      const isOnHomePage =
        window.location.pathname === "/" ||
        window.location.pathname === "/index.html";

      if (!targetId) return;

      if (!isOnHomePage) {
        // Use assign instead of setting location.href to trigger full page load
        window.location.assign(`/#${targetId}`);
        return;
      }

      e.preventDefault();
      const targetElement = document.getElementById(targetId);
      if (targetElement) {
        targetElement.scrollIntoView({ behavior: "smooth" });
      }

      activateLink(link);
      animateSliderTo(link);
    });
  });

  // Set initial position on load
  window.addEventListener("DOMContentLoaded", () => {
    const hash = window.location.hash.replace("#", "");
    const activeLink =
      Array.from(navLinks).find((link) =>
        link.getAttribute("href")?.includes(hash)
      ) || navLinks[0];

    activateLink(activeLink);
    animateSliderTo(activeLink);

    // Scroll to the section manually after load
    if (hash) {
      const target = document.getElementById(hash);
      if (target) {
        setTimeout(() => {
          target.scrollIntoView({ behavior: "smooth" });
        }, 100); // slight delay ensures layout is ready
      }
    }
  });
</script>
